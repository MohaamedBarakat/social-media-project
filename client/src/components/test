<div className="signup">     
                {error && <ErrorMessage error={error}/>}       
                <h2> Signup </h2>
                <form onSubmit={handleSubmit}>
                    <label> Username : </label>
                    <input 
                    type="text"
                    placeholder="Username"
                    required
                    value={username}
                    onChange = {(e)=> setUsername(e.target.value)}
                    />
                    <label> Email : </label>
                    <input 
                    type="email"
                    placeholder="Email"
                    required
                    value={email}
                    onChange = {(e) => setEmail(e.target.value)}
                    />
                    <label> Password : </label>
                    <input 
                    type="password"
                    placeholder="Password"
                    required
                    value={password}
                    onChange = {(e)=>setPassword(e.target.value)}
                    />
                    <label> Confirm Password : </label>
                    <input 
                    type="password"
                    placeholder="Confirm Password"
                    required
                    value={confirmPassword}
                    onChange = {(e) => setConfirmPassword(e.target.value)}
                    />
                    {!isPending && <button> Signup</button>}
                    {isPending && <button disabled style={{background:'gray'}}> signing up</button>}
                </form>
            </div>



             const logout = ()=>{
    const history = useHistory();
    const handleLogout = () =>{
        setIsAUth(false);
        setToken = null;
        setUserId = null ;
        history.push('/');
  }
